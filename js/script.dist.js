!function e(t,o,n){function i(c,l){if(!o[c]){if(!t[c]){var s="function"==typeof require&&require;if(!l&&s)return s(c,!0);if(r)return r(c,!0);var a=new Error("Cannot find module '"+c+"'");throw a.code="MODULE_NOT_FOUND",a}var d=o[c]={exports:{}};t[c][0].call(d.exports,function(e){var o=t[c][1][e];return i(o?o:e)},d,d.exports,e,t,o,n)}return o[c].exports}for(var r="function"==typeof require&&require,c=0;c<n.length;c++)i(n[c]);return i}({1:[function(e){!function(){function t(){new o($("#container"))}var o=e("./classes/App");t()}()},{"./classes/App":2}],2:[function(e,t){t.exports=function(){function t(e){console.log("[App] constructor"),this.$el=e,this.whiteboard=new o(this.$el),this.whiteboard.createBlanc(),bean.on(this.whiteboard,"whiteboard-clicked",this.whiteboardClickedHandler.bind(this))}var o=e("./Whiteboard"),n=e("./ElementPicker");return t.prototype.whiteboardClickedHandler=function(e){console.log("[App] whiteboardClickedHandler - position: X="+e.xPos+" Y="+e.yPos),this.elementPicker=new n(this.$el)},t}()},{"./ElementPicker":3,"./Whiteboard":4}],3:[function(e,t){t.exports=function(){function e(e){console.log("[ElementPicker] constructor"),this.$el=e}return e}()},{}],4:[function(e,t){t.exports=function(){function e(e){console.log("[Whiteboard] constructor"),this.$el=e}return e.prototype.createBlanc=function(){console.log("[Whiteboard] createsBlanc"),console.log(this.$el),this.$el.append("<div id='whiteboard'></div>"),this.bindClickHandler()},e.prototype.bindClickHandler=function(){console.log("[Whiteboard] bindClickHandler"),this.$el.find("#whiteboard").on("click",this.clickHandler.bind(this))},e.prototype.clickHandler=function(e){console.log("[Whiteboard] clickHandler");var t=e.pageX-this.$el.offset().left,o=e.pageY-this.$el.offset().top,n={};n.xPos=t,n.yPos=o,bean.fire(this,"whiteboard-clicked",n)},e}()},{}]},{},[1]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyaWZ5L25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJqcy9zcmMvc2NyaXB0LmpzIiwianMvc3JjL2NsYXNzZXMvQXBwLmpzIiwianMvc3JjL2NsYXNzZXMvRWxlbWVudFBpY2tlci5qcyIsImpzL3NyYy9jbGFzc2VzL1doaXRlYm9hcmQuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkNBQUEsUUFBQSxHQUFBLEVBQUEsRUFBQSxHQUFBLFFBQUEsR0FBQSxFQUFBLEdBQUEsSUFBQSxFQUFBLEdBQUEsQ0FBQSxJQUFBLEVBQUEsR0FBQSxDQUFBLEdBQUEsR0FBQSxrQkFBQSxVQUFBLE9BQUEsS0FBQSxHQUFBLEVBQUEsTUFBQSxHQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsTUFBQSxHQUFBLEdBQUEsRUFBQSxJQUFBLEdBQUEsR0FBQSxPQUFBLHVCQUFBLEVBQUEsSUFBQSxNQUFBLEdBQUEsS0FBQSxtQkFBQSxFQUFBLEdBQUEsR0FBQSxFQUFBLElBQUEsV0FBQSxHQUFBLEdBQUEsR0FBQSxLQUFBLEVBQUEsUUFBQSxTQUFBLEdBQUEsR0FBQSxHQUFBLEVBQUEsR0FBQSxHQUFBLEVBQUEsT0FBQSxHQUFBLEVBQUEsRUFBQSxJQUFBLEVBQUEsRUFBQSxRQUFBLEVBQUEsRUFBQSxFQUFBLEdBQUEsTUFBQSxHQUFBLEdBQUEsUUFBQSxJQUFBLEdBQUEsR0FBQSxrQkFBQSxVQUFBLFFBQUEsRUFBQSxFQUFBLEVBQUEsRUFBQSxPQUFBLElBQUEsRUFBQSxFQUFBLEdBQUEsT0FBQSxLQUFBLEdBQUEsU0FBQSxJQ0FBLFdBSUEsUUFBQSxLQUNBLEdBQUEsR0FBQSxFQUFBLGVBSEEsR0FBQSxHQUFBLEVBQUEsZ0JBTUEsK0NDUkEsRUFBQSxRQUFBLFdBS0EsUUFBQSxHQUFBLEdBQUEsUUFBQSxJQUFBLHFCQUNBLEtBQUEsSUFBQSxFQUVBLEtBQUEsV0FBQSxHQUFBLEdBQUEsS0FBQSxLQUNBLEtBQUEsV0FBQSxjQUdBLEtBQUEsR0FBQSxLQUFBLFdBQUEscUJBQUEsS0FBQSx5QkFBQSxLQUFBLE9BVkEsR0FBQSxHQUFBLEVBQUEsZ0JBQ0EsRUFBQSxFQUFBLGtCQWlCQSxPQUpBLEdBQUEsVUFBQSx5QkFBQSxTQUFBLEdBQUEsUUFBQSxJQUFBLGdEQUFBLEVBQUEsS0FBQSxNQUFBLEVBQUEsTUFDQSxLQUFBLGNBQUEsR0FBQSxHQUFBLEtBQUEsTUFHQSwrRENwQkEsRUFBQSxRQUFBLFdBR0EsUUFBQSxHQUFBLEdBQUEsUUFBQSxJQUFBLCtCQUNBLEtBQUEsSUFBQSxFQUlBLE1BQUEsNEJDUkEsRUFBQSxRQUFBLFdBSUEsUUFBQSxHQUFBLEdBQUEsUUFBQSxJQUFBLDRCQUNBLEtBQUEsSUFBQSxFQXdCQSxNQXJCQSxHQUFBLFVBQUEsWUFBQSxXQUFBLFFBQUEsSUFBQSw2QkFDQSxRQUFBLElBQUEsS0FBQSxLQUNBLEtBQUEsSUFBQSxPQUFBLCtCQUVBLEtBQUEsb0JBR0EsRUFBQSxVQUFBLGlCQUFBLFdBQUEsUUFBQSxJQUFBLGlDQUNBLEtBQUEsSUFBQSxLQUFBLGVBQUEsR0FBQSxRQUFBLEtBQUEsYUFBQSxLQUFBLFFBR0EsRUFBQSxVQUFBLGFBQUEsU0FBQSxHQUFBLFFBQUEsSUFBQSw0QkFDQSxJQUFBLEdBQUEsRUFBQSxNQUFBLEtBQUEsSUFBQSxTQUFBLEtBQ0EsRUFBQSxFQUFBLE1BQUEsS0FBQSxJQUFBLFNBQUEsSUFDQSxJQUNBLEdBQUEsS0FBQSxFQUNBLEVBQUEsS0FBQSxFQUVBLEtBQUEsS0FBQSxLQUFBLHFCQUFBLElBR0EiLCJmaWxlIjoic2NyaXB0LmRpc3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIihmdW5jdGlvbigpe1xuXG5cdHZhciBBcHAgPSByZXF1aXJlKCcuL2NsYXNzZXMvQXBwJyk7XG5cblx0ZnVuY3Rpb24gaW5pdCgpwqB7XG5cdFx0bmV3IEFwcCgkKCcjY29udGFpbmVyJykpO1xuXHR9XG5cblx0aW5pdCgpO1xuXG59KSgpOyIsIm1vZHVsZS5leHBvcnRzID0gKGZ1bmN0aW9uKCl7XG5cblx0dmFyIFdoaXRlYm9hcmQgPSByZXF1aXJlKCcuL1doaXRlYm9hcmQnKTtcblx0dmFyIEVsZW1lbnRQaWNrZXIgPSByZXF1aXJlKCcuL0VsZW1lbnRQaWNrZXInKTtcblxuXHRmdW5jdGlvbiBBcHAoJGVsKSB7IGNvbnNvbGUubG9nKCdbQXBwXSBjb25zdHJ1Y3RvcicpO1xuXHRcdHRoaXMuJGVsID0gJGVsO1xuXG5cdFx0dGhpcy53aGl0ZWJvYXJkID0gbmV3IFdoaXRlYm9hcmQoIHRoaXMuJGVsICk7XG5cdFx0dGhpcy53aGl0ZWJvYXJkLmNyZWF0ZUJsYW5jKCk7XG5cblx0XHQvL0xVSVNURVJFTlxuXHRcdGJlYW4ub24odGhpcy53aGl0ZWJvYXJkLCBcIndoaXRlYm9hcmQtY2xpY2tlZFwiLCB0aGlzLndoaXRlYm9hcmRDbGlja2VkSGFuZGxlci5iaW5kKHRoaXMpKTtcblxuXHR9XG5cblx0QXBwLnByb3RvdHlwZS53aGl0ZWJvYXJkQ2xpY2tlZEhhbmRsZXIgPSBmdW5jdGlvbihldmVudCkgeyBjb25zb2xlLmxvZygnW0FwcF0gd2hpdGVib2FyZENsaWNrZWRIYW5kbGVyIC0gcG9zaXRpb246IFg9JyArIGV2ZW50LnhQb3MgK1wiIFk9XCIrZXZlbnQueVBvcyApO1xuXHRcdHRoaXMuZWxlbWVudFBpY2tlciA9IG5ldyBFbGVtZW50UGlja2VyKCB0aGlzLiRlbCApO1xuXHR9O1xuXG5cdHJldHVybiBBcHA7XG5cbn0pKCk7IiwibW9kdWxlLmV4cG9ydHMgPSAoZnVuY3Rpb24oKXtcblx0XG5cblx0ZnVuY3Rpb24gRWxlbWVudFBpY2tlcigkZWwpIHsgY29uc29sZS5sb2coJ1tFbGVtZW50UGlja2VyXSBjb25zdHJ1Y3RvcicpO1xuXHRcdHRoaXMuJGVsID0gJGVsO1xuXG5cdH1cblxuXHRyZXR1cm4gRWxlbWVudFBpY2tlcjtcblxufSkoKTsiLCJtb2R1bGUuZXhwb3J0cyA9IChmdW5jdGlvbigpe1xuXG5cdC8vVE9ETzogSU5TVEVMTElOR0VOIEtBREVSIFRPRVZPRUdFTiBWSUEgSEFORExFQkFSU1xuXG5cdGZ1bmN0aW9uIFdoaXRlYm9hcmQoJGVsKSB7IGNvbnNvbGUubG9nKCdbV2hpdGVib2FyZF0gY29uc3RydWN0b3InKTtcblx0XHR0aGlzLiRlbCA9ICRlbDtcblx0fVxuXG5cdFdoaXRlYm9hcmQucHJvdG90eXBlLmNyZWF0ZUJsYW5jID0gZnVuY3Rpb24oKXsgY29uc29sZS5sb2coJ1tXaGl0ZWJvYXJkXSBjcmVhdGVzQmxhbmMnKTtcblx0XHRjb25zb2xlLmxvZyh0aGlzLiRlbCk7XG5cdFx0dGhpcy4kZWwuYXBwZW5kKCBcIjxkaXYgaWQ9J3doaXRlYm9hcmQnPjwvZGl2PlwiICk7XG5cblx0XHR0aGlzLmJpbmRDbGlja0hhbmRsZXIoKTtcblx0fTtcblxuXHRXaGl0ZWJvYXJkLnByb3RvdHlwZS5iaW5kQ2xpY2tIYW5kbGVyID0gZnVuY3Rpb24oKXsgY29uc29sZS5sb2coJ1tXaGl0ZWJvYXJkXSBiaW5kQ2xpY2tIYW5kbGVyJyk7XG5cdFx0dGhpcy4kZWwuZmluZChcIiN3aGl0ZWJvYXJkXCIpLm9uKCdjbGljaycsIHRoaXMuY2xpY2tIYW5kbGVyLmJpbmQodGhpcykpO1xuXHR9O1xuXG5cdFdoaXRlYm9hcmQucHJvdG90eXBlLmNsaWNrSGFuZGxlciA9IGZ1bmN0aW9uKGV2ZW50KXsgY29uc29sZS5sb2coJ1tXaGl0ZWJvYXJkXSBjbGlja0hhbmRsZXInKTtcbiAgIFx0XHR2YXIgeFBvcyA9IGV2ZW50LnBhZ2VYIC0gdGhpcy4kZWwub2Zmc2V0KCkubGVmdDtcbiAgIFx0XHR2YXIgeVBvcyA9IGV2ZW50LnBhZ2VZIC0gdGhpcy4kZWwub2Zmc2V0KCkudG9wO1xuICAgXHRcdHZhciBwb3NpdGlvbiA9IHt9O1xuICAgXHRcdHBvc2l0aW9uLnhQb3MgPSB4UG9zO1xuICAgXHRcdHBvc2l0aW9uLnlQb3MgPSB5UG9zO1xuXHRcdFxuXHRcdGJlYW4uZmlyZSh0aGlzLCBcIndoaXRlYm9hcmQtY2xpY2tlZFwiLCBwb3NpdGlvbik7IFxuXHR9O1xuXG5cdHJldHVybiBXaGl0ZWJvYXJkO1xuXG59KSgpOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==