!function e(t,i,n){function o(r,s){if(!i[r]){if(!t[r]){var c="function"==typeof require&&require;if(!s&&c)return c(r,!0);if(l)return l(r,!0);var a=new Error("Cannot find module '"+r+"'");throw a.code="MODULE_NOT_FOUND",a}var d=i[r]={exports:{}};t[r][0].call(d.exports,function(e){var i=t[r][1][e];return o(i?i:e)},d,d.exports,e,t,i,n)}return i[r].exports}for(var l="function"==typeof require&&require,r=0;r<n.length;r++)o(n[r]);return o}({1:[function(e){!function(){function t(){new i($("#container"))}var i=e("./classes/App");t()}()},{"./classes/App":2}],2:[function(e,t){t.exports=function(){function t(e){console.log("[App] constructor"),this.$el=e,this.position={},this.whiteboard=new i(this.$el),this.elementPicker=new n(this.$el),bean.on(this.whiteboard,"whiteboard-clicked",this.whiteboardClickedHandler.bind(this)),bean.on(this.elementPicker,"element-picker-clicked",this.elementPickerClickedHandler.bind(this))}var i=e("./Whiteboard"),n=e("./ElementPicker"),o=e("./Element");return t.prototype.whiteboardClickedHandler=function(e){console.log("[App] whiteboardClickedHandler"),this.elementPicker.toggleVisible(),this.elementPicker.setLocation(e.xPos,e.yPos),this.position=e},t.prototype.elementPickerClickedHandler=function(e){console.log("[App] elementPickerClickedHandler"),this.elementPicker.toggleVisible();new o(this.$el,e,this.position)},t}()},{"./Element":3,"./ElementPicker":4,"./Whiteboard":5}],3:[function(e,t){t.exports=function(){function t(e,t,i,n){console.log("[Element] constructor"),this.$el=e,this.elementId=n,this.elementId=this.elementId?n:this.$el.find(".element-holder").length+1,this.elementType=t,this.position=i,this.createElementHolder()}var i=e("./elements/Postit");return t.prototype.createElementHolder=function(){console.log("[Element] createElementHolder"),this.$el.find("#whiteboard").append("<section class='element-holder'></section>"),this.$el.find(".element-holder:last-of-type").attr("id",this.elementId);var e={top:this.position.yPos,left:this.position.xPos};this.$el.find("#"+this.elementId).css(e),this.createElement()},t.prototype.createElement=function(){switch(console.log("[Element] createElement"),this.elementType){case"post-it":this.element=new i,this.$el.find("#"+this.elementId).append(this.element.createPostit);break;case"static":break;case"motion":}},t}()},{"./elements/Postit":6}],4:[function(e,t){t.exports=function(){function e(e){console.log("[ElementPicker] constructor"),this.$el=e;var t=$("#element-picker-template").text(),i=Handlebars.compile(t),n={elements:[{element:"post-it",name:"post-it"},{element:"static",name:"image"},{element:"motion",name:"video"}]};Handlebars.registerHelper("picker",function(){var e=Handlebars.escapeExpression(this.element),t=Handlebars.escapeExpression(this.name);return new Handlebars.SafeString("<li id="+e+">"+t+"</li>")});var o=i(n);this.$el.find("#whiteboard").append($(o)),this.toggleVisible(),this.bindHandler()}return e.prototype.toggleVisible=function(){console.log("[ElementPicker] toggleVisible"),this.$el.find("#element-picker").toggleClass("hidden")},e.prototype.setLocation=function(e,t){console.log("[ElementPicker] setLocation");var i={top:t,left:e};this.$el.find("#element-picker").css(i)},e.prototype.bindHandler=function(){console.log("[ElementPicker] bindHandler"),this.$el.find("#element-picker > ul > li").on("click",this.clickHandler.bind(this))},e.prototype.clickHandler=function(e){console.log("[ElementPicker] clickHandler"),bean.fire(this,"element-picker-clicked",e.target.id)},e}()},{}],5:[function(e,t){t.exports=function(){function e(e){console.log("[Whiteboard] constructor"),this.$el=e,this.createWhiteboard()}return e.prototype.createWhiteboard=function(){console.log("[Whiteboard] createWhiteboard"),this.board=this.$el.append("<article id='whiteboard'></article>"),this.bindHandler()},e.prototype.bindHandler=function(){console.log("[Whiteboard] bindHandler"),this.board.on("click",this.clickHandler.bind(this))},e.prototype.clickHandler=function(e){console.log("[Whiteboard] clickHandler");var t=e.pageX-this.$el.offset().left,i=e.pageY-this.$el.offset().top,n={};n.xPos=t,n.yPos=i,"whiteboard"===e.target.id&&bean.fire(this,"whiteboard-clicked",n)},e}()},{}],6:[function(e,t){t.exports=function(){function e(e){console.log("[Postit] constructor"),e&&(this.txt=e)}return e.prototype.createPostit=function(){console.log("[Postit] createPostit");var e=$("#postit-template").text(),t=Handlebars.compile(e),i={};i.txt=this.txt?this.txt:"Nieuwe Postit";var n=t(i);return $(n)},e}()},{}]},{},[1]);
//# sourceMappingURL=data:application/json;base64,